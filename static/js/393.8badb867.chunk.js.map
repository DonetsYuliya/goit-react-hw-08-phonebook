{"version":3,"file":"static/js/393.8badb867.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelector.js","components/PhonebookForm.jsx","redux/filters/filterSelector.js","components/ContactsList.jsx","components/ContactsFilter.jsx","pages/Contacts.jsx","webpack://react-homework-template/./src/components/style.module.css?6fa0"],"sourcesContent":["export const contactsState = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { contactsState } from 'redux/contacts/contactsSelector';\nimport css from './style.module.css';\n\nconst PhonebookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsState);\n\n  const isDublicate = name => {\n    const normalizedName = name.toLowerCase();\n    const result = contacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n    return Boolean(result);\n  };\n\n  const handleInput = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      return setName(value);\n    }\n    setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (isDublicate(name)) {\n      alert(`${name} is already in contacts`);\n      setName('');\n      return false;\n    }\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.contactsFormWrapper}>\n      <h1>Phonebook</h1>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          value={name}\n          onChange={handleInput}\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label htmlFor=\"number\">Number</label>\n        <input\n          value={number}\n          onChange={handleInput}\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      <h2 className={css.title}>Contacts</h2>\n    </div>\n  );\n};\n\nexport default PhonebookForm;\n","export const filterState = state => state.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { contactsState } from 'redux/contacts/contactsSelector';\nimport { filterState } from 'redux/filters/filterSelector';\nimport css from './style.module.css';\n\nconst ContactsList = () => {\n  const contacts = useSelector(contactsState);\n  const filter = useSelector(filterState);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n    return result;\n  };\n\n  const isFilteredContacts = getFilteredContacts();\n\n  const item = isFilteredContacts.map(({ id, name, number }) => {\n    return (\n      <li className={css.item} key={id}>\n        {name}: {number}{' '}\n        <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return <ul>{item}</ul>;\n};\n\nexport default ContactsList;\n","import css from './style.module.css';\nimport { setFilter } from 'redux/filters/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filterWrapper}>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        onChange={handleFilter}\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </div>\n  );\n};\n\nexport default ContactsFilter;\n","import PhonebookForm from 'components/PhonebookForm';\nimport ContactsList from 'components/ContactsList';\nimport ContactsFilter from 'components/ContactsFilter';\nimport { useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { getIsLoading, getError } from 'redux/contacts/contactsSelector';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Outlet />\n      <PhonebookForm />\n      <ContactsFilter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactsList />\n    </div>\n  );\n};\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsFormWrapper\":\"style_contactsFormWrapper__1tWzN\",\"form\":\"style_form__ztOxc\",\"input\":\"style_input__0ITlZ\",\"btn\":\"style_btn__-6CXS\",\"filterWrapper\":\"style_filterWrapper__vh7xC\",\"item\":\"style_item__MF55d\",\"userMenuWrapper\":\"style_userMenuWrapper__KMElz\",\"logoutBtn\":\"style_logoutBtn__2tk58\",\"navList\":\"style_navList__tSDzf\",\"navLink\":\"style_navLink__rypIV\"};"],"names":["contactsState","state","contacts","items","getIsLoading","isLoading","getError","error","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInput","target","value","className","css","onSubmit","evt","preventDefault","normalizedName","toLowerCase","result","find","Boolean","isDublicate","alert","addContact","htmlFor","onChange","type","pattern","title","required","filterState","filter","item","normalizedFilter","includes","getFilteredContacts","map","id","onClick","deleteContact","setFilter","useEffect","fetchContacts"],"sourceRoot":""}